name: Manage Kaggle Notebooks  # GitHub Actions 的名称

on:
  schedule:
    - cron: '0 0,9,18 * * *'  # 定时任务，每天的00:00、09:00和18:00触发一次
  workflow_dispatch:

jobs:
  run-notebooks:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境上运行

    steps:
      - name: Checkout code  # 检出当前的代码仓库
        uses: actions/checkout@v2  # 使用 GitHub 提供的 checkout action
      
      - name: Setup Kaggle API credentials  # 设置 Kaggle API 凭证
        run: |
你遇到的错误提示 Could not find kaggle.json 表示 Kaggle CLI 无法找到用于身份验证的 kaggle.json 文件。这个文件通常包含你的 Kaggle API 密钥，并且需要放在特定路径下。

要解决这个问题，可以在 GitHub Actions 中添加步骤，将 kaggle.json 文件添加到正确的目录。以下是如何修改你的工作流文件来处理这个问题：
1. 获取 Kaggle API 密钥

首先，确保你已经在 Kaggle 网站上生成了 API 密钥。生成后，Kaggle 会为你下载一个 kaggle.json 文件，里面包含你的用户名和 API 密钥。
2. 添加 kaggle.json 文件到 GitHub Secrets

将 kaggle.json 文件的内容复制到 GitHub 仓库的 Secrets 中。你可以将其命名为 KAGGLE_JSON.
3. 修改 GitHub Actions 工作流文件

yaml

name: Manage Kaggle Notebooks  # GitHub Actions 的名称

on:
  schedule:
    - cron: '0 0,9,18 * * *'  # 定时任务，每天的00:00、09:00和18:00触发一次
  workflow_dispatch:  # 允许手动触发

jobs:
  run-notebooks:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境上运行

    steps:
      - name: Checkout code  # 检出当前的代码仓库
        uses: actions/checkout@v2  # 使用 GitHub 提供的 checkout action

      - name: Setup Kaggle API credentials  # 设置 Kaggle API 凭证
        run: |
          mkdir -p ~/.kaggle  # 创建 .kaggle 目录
          echo "${{ secrets.KAGGLE_JSON }}" > ~/.kaggle/kaggle.json  # 将 secrets 中的 KAGGLE_JSON 写入 kaggle.json
          chmod 600 ~/.kaggle/kaggle.json  # 设置权限，确保只有当前用户可以读取

      - name: Install Kaggle CLI  # 安装 Kaggle CLI 工具
        run: |
          pip install kaggle  # 使用 pip 安装 Kaggle CLI

      - name: Prepare Notebook with Timestamp  # 准备带有时间戳的 Notebook 文件夹
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 生成唯一的时间戳
          mkdir -p notebook_${TIMESTAMP}  # 创建临时文件夹
          cp script/main.py notebook_${TIMESTAMP}/main_${TIMESTAMP}.py # 复制并重命名 Notebook 文件
          cp script/kernel-metadata.json notebook_${TIMESTAMP}/kernel-metadata.json
          
      - name: Submit and Run Notebook  # 提交并运行 Notebook
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 重新获取时间戳
          NOTEBOOK_DIR="notebook_${TIMESTAMP}"  # 设置临时文件夹路径
          kaggle kernels push -p ${NOTEBOOK_DIR}  # 推送临时文件夹
          kaggle kernels create -p ${NOTEBOOK_DIR} --title "Notebook ${TIMESTAMP}" --id <kernel-id>  # 创建并运行 Notebook
          echo "Notebook ${TIMESTAMP} submitted."  # 输出提示信息

      - name: Clean Up  # 清理临时文件夹
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 重新获取时间戳
          rm -rf notebook_${TIMESTAMP}  # 删除临时文件夹
          echo "Temporary notebook folder deleted."  # 输出提示信息
