name: Manage Kaggle Notebooks  # GitHub Actions 的名称

on:
  schedule:
    - cron: '0 0,9,18 * * *'  # 定时任务，每天的00:00、09:00和18:00触发一次
  workflow_dispatch:  # 允许手动触发

jobs:
  run-notebooks:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境上运行
    env:
      KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
      KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

    steps:
      - name: Checkout code  # 检出当前的代码仓库
        uses: actions/checkout@v2

      - name: Setup Kaggle API credentials  # 设置 Kaggle API 凭证
        run: |
          mkdir -p ~/.kaggle
          echo "${{ secrets.KAGGLE_JSON }}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Install Kaggle CLI  # 安装 Kaggle CLI 工具
        run: |
          pip install kaggle

      - name: Prepare Notebook With Timestamp  # 准备带有时间戳的 Notebook 文件夹
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S%N')
          NOTEBOOK_DIR="notebook_${TIMESTAMP}"
          echo "Creating notebook directory: ${NOTEBOOK_DIR}"
          mkdir -p ${NOTEBOOK_DIR}
          cp script/main.py ${NOTEBOOK_DIR}/main.py
          cp script/kernel-metadata.json ${NOTEBOOK_DIR}/kernel-metadata.json

      - name: Submit and Run Notebook  # 提交并运行 Notebook
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S%N')
          NOTEBOOK_DIR="notebook_${TIMESTAMP}"
          NOTEBOOK_TITLE="Notebook_${TIMESTAMP}"
          echo "Submitting notebook with title: ${NOTEBOOK_TITLE}"
          kaggle kernels push -p ${NOTEBOOK_DIR}
          
          # Try to create a new kernel. If it fails due to conflict, print the error and continue.
          if ! kaggle kernels create -p ${NOTEBOOK_DIR} --title "${NOTEBOOK_TITLE}"; then
            echo "Error creating notebook with title: ${NOTEBOOK_TITLE}. The title may be already in use."
          fi

      - name: Clean Up  # 清理临时文件夹
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S%N')
          NOTEBOOK_DIR="notebook_${TIMESTAMP}"
          rm -rf ${NOTEBOOK_DIR}
          echo "Temporary notebook folder deleted."
