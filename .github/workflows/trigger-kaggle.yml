name: Manage Kaggle Notebooks  # GitHub Actions 的名称

on:
  schedule:
    - cron: '0 0,9,18 * * *'  # 定时任务，每天的00:00、09:00和18:00触发一次

jobs:
  run-notebooks:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境上运行

    steps:
      - name: Checkout code  # 检出当前的代码仓库
        uses: actions/checkout@v2  # 使用 GitHub 提供的 checkout action

      - name: Install Kaggle CLI  # 安装 Kaggle CLI 工具
        run: |
          pip install kaggle  # 使用 pip 安装 Kaggle CLI

      - name: Prepare Notebook with Timestamp  # 准备带有时间戳的 Notebook
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 生成唯一的时间戳
          cp path/to/original_notebook.ipynb path/to/notebook_${TIMESTAMP}.ipynb  # 复制原始 Notebook 并添加时间戳

      - name: Submit and Run Notebook  # 提交并运行 Notebook
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 重新获取时间戳
          NOTEBOOK_PATH="path/to/notebook_${TIMESTAMP}.ipynb"  # 设置带有时间戳的 Notebook 文件路径
          kaggle kernels push -p ${NOTEBOOK_PATH}  # 上传 Notebook 到 Kaggle
          kaggle kernels create -p ${NOTEBOOK_PATH} --title "Notebook ${TIMESTAMP}" --id <kernel-id>  # 创建并运行 Notebook
          echo "Notebook ${TIMESTAMP} submitted."  # 输出提示信息

      - name: Clean Up  # 清理临时文件
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')  # 重新获取时间戳
          rm path/to/notebook_${TIMESTAMP}.ipynb  # 删除临时 Notebook 文件
          echo "Temporary notebook file deleted."  # 输出提示信息
